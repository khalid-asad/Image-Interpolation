function img = make(r_zoom, c_zoom, img, r_new, c_new, w, x, y, z)
A_inv = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0; 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0; ...
    -3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0; 2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0; ...
    0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0; 0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0; ...
    0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0; 0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0; ...
    -3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0; 0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0; ...
    9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1; -6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1; ...
    2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0; 0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0; ...
    -6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1; 4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1 ];
f=zeros(16,1);
for i=0:r_new-1
    for j=0:c_new-1
        i_r = i/r_zoom;
        i_c = j/c_zoom;
        width = -(((i_r)-floor(i_r))-1);
 		height = -(((i_c)-floor(i_c))-1);
        %vector to keep index values organized
        I = [1+floor(i_r), 1+floor(i_c), 1+ceil(i_c), 1+ceil(i_r)];
		f(1) = w(I(1),I(2));                        %original
		f(2) = w(I(1),I(3));
		f(3) = w(I(4),I(2));
		f(4) = w(I(4),I(3));
		f(5) = x(I(1),I(2));                        %partial x
		f(6) = x(I(1),I(3));
		f(7) = x(I(4),I(2));
		f(8) = x(I(4),I(3));
		f(9) = y(I(1),I(2));                        %partial y
		f(10) = y(I(1),I(3));
		f(11) = y(I(4),I(2));
		f(12) = y(I(4),I(3));
		f(13) = z(I(1),I(2));                       %partial xy
		f(14) = z(I(1),I(3));
		f(15) = z(I(4),I(2));
		f(16) = z(I(4),I(3));
    	
        alpha = A_inv*f;                            %from the eqn A*alpha=x
		
        pixel=0;
		for k = 1:16
	 		pixel = pixel + alpha(k).*((1-width)^(floor((k-1)/4))).*((1-height)^(mod(k-1,4)));
		end
		img(i+1,j+1,1) = pixel;
    end
end
end